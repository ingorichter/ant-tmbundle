<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby

SUPPORT = ENV['TM_SUPPORT_PATH']
DIALOG  = SUPPORT + '/bin/tm_dialog'

require SUPPORT + '/lib/exit_codes'
require SUPPORT + '/lib/textmate'
require SUPPORT + '/lib/escape'
require SUPPORT + '/lib/ui'
require SUPPORT + '/lib/tm/process'
require SUPPORT + '/lib/web_preview'
require 'rexml/document'

TextMate.require_cmd "ant"

STDOUT.sync = true

puts html_head( :window_title =&gt; "Ant Build (target)",
				:page_title =&gt; "Build (target)" );

base_dir = ""
ant_build_file = "" 
ant_build_file = ENV['TM_ANT_BUILD_FILE'] if ENV['TM_ANT_BUILD_FILE'] != nil
project_base_path = File.dirname( ENV['TM_PROJECT_FILEPATH'] ) if ENV['TM_PROJECT_FILEPATH'] != nil
ant_build_file = project_base_path + "/" + ant_build_file if ant_build_file != ""

if File.exists?( ant_build_file )
  source = REXML::Document.new( File.open( ant_build_file, "r"))
else 
  source = REXML::Document.new(STDIN.read)
  ant_build_file = ENV['TM_FILEPATH']
end

ant_targets = []
source.each_element('//target'){ |targ| 
	ant_targets.push( { 'title' =&gt; targ.attributes['name'], 
						'description' =&gt; targ.attributes['description'].to_s } ) 
}

TextMate.exit_show_html( "&lt;h1&gt;No targets found.&lt;/h1&gt;") if ant_targets.empty?

ant_targets = ant_targets.sort {| a,b | a['title'] &lt;=&gt; b['title'] }

#Conflicts with something in IO ?
# res = TextMate::UI.menu(ant_targets)
# TextMate.exit_discard() if res == nil
# selected_target = res['title']
# selected_desc = res['description']

plist = { 'menuItems' =&gt; ant_targets }.to_plist
res = OSX::PropertyList::load(`#{e_sh DIALOG} -up #{e_sh plist}`)
TextMate.exit_discard() unless res.has_key? 'selectedMenuItem'
selected_target = res['selectedMenuItem']['title']
selected_desc = res['selectedMenuItem']['description']

puts "&lt;h1&gt;#{selected_target}:&lt;/h1&gt;&lt;p&gt;#{selected_desc}&lt;/p&gt;"

puts "&lt;pre&gt;"

TextMate::Process.run("ant -buildfile #{ant_build_file} #{selected_target}") do |str|
	STDOUT &lt;&lt; htmlize(str, :no_newline_after_br =&gt; true)
end

puts "&lt;/pre&gt;"
</string>
	<key>fallbackInput</key>
	<string>document</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>@B</string>
	<key>name</key>
	<string>Build Target</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>scope</key>
	<string>text.xml.ant</string>
	<key>uuid</key>
	<string>05BC9A24-B64E-42D6-8177-326518E65EE0</string>
</dict>
</plist>
