<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>. "$TM_SUPPORT_PATH/lib/webpreview.sh"
html_header "Apache Ant Bundle Help" "Ant"

"$TM_SUPPORT_PATH/lib/markdown_to_help.rb" &lt;&lt;'EOF'
# Installation

The most recent version of Ant can be downloaded [here](http://ant.apache.org/bindownload.cgi). An installation guide can be found [here]( http://www.asceticmonk.com/blog/?p=388 ). Alternatively Ant can be found on the Apple Developer Tools Install Disk, however as of Tiger this is not the most recent version. 

# Configuration Options

These environment variables allow you to define or customise the behavior of certain commands. For help on setting them up please see [TextMate help](?environment_variables).

* `TM_ANT_BUILD_FILE`
The location of the ant build file you wish to target by default. This can be either the full path, or relative to the current project.

* `TM_ANT_BUILD_PARSER`
This is Experimental - The location of a script to format the output of ant. Scripts are available to prettify the output for Java and Flex - in their respective bundles. If this variable is not set the output is wrapped in pre tags.

* `TM_ANT_DTD_VALIDATION`
When set (to anything but the empty string) the _Validate Build File_ command will, in addition to verify that the XML is well-formed, check that the document conforms to `ant.dtd` (if available).

* `TM_ANT_MANUAL_PATH`
If you have installed your own version of Ant, you can set this variable to the location of its manual.  
For example if you installed it via MacPorts then set it to `/opt/local/share/java/apache-ant/docs/manual`.  
The default is to use the manual included with Apple’s developer tools with the [online version](http://ant.apache.org/manual/index.html) as a fallback.

# Commands

## Build
  
**Key Equivalent:**  ⌘B  
Uses `TM_ANT_BUILD_FILE` if set, otherwise attempts to locate a build file and execute it.

## Build Target

**Target:** `TM_ANT_BUILD_FILE`, Selected Text or Current Document  
**Key Equivalent:**  ⇧⌘B  
Uses `TM_ANT_BUILD_FILE` if set, otherwise parses the current document for build targets from which you can select which one to execute.

## Create Ant.dtd

Creates/Updates the `ant.dtd` file and displays it in the html output window. A copy of the file is kept in the Bundle and the Validate Build File command can be configured to validate against the dtd.

## Validate Build File

**Target:** Current Document  
**Key Equivalent:**  ⌃⇧V    
**Scope:** text.xml.ant  
Validates the current document as valid XML. When the `TM_ANT_DTD_VALIDATION` [environmental variable](?environment_variables) has been set to true, and the `ant.dtd` is available (see *Create Ant.dtd* Command) the document is also validated against the `ant.dtd`.

# TODO

Detecting ant - in Build Target Command.  
Pretty Printing of output - linking errors to files in TM.  
Generation of Auto Completions via Ant.dtd (maybe even the language file ?).

# Contributors

[Simon Gregory](http://blog.simongregory.com)  

EOF

html_footer</string>
	<key>input</key>
	<string>none</string>
	<key>name</key>
	<string>Help</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>scope</key>
	<string>text.xml.ant</string>
	<key>uuid</key>
	<string>B34D55F6-17C3-4698-973F-FDE059BEB675</string>
</dict>
</plist>
